#!/bin/bash

# -----------------------------------------------------------------------------
# INSTALL
#
# Sets up command line tools and package managers and downloads all configured
# applications.
#
# Usage: _install [tasks...]
# -----------------------------------------------------------------------------

set -e

# -----------------------------------------------------------------------------
# Preparation: Install Xcode command line tools
# -----------------------------------------------------------------------------

function xcodeCli
{
  echo "Installing command line developer tools ..."
  xcode-select --install
}

# -----------------------------------------------------------------------------
# Install package managers
# -----------------------------------------------------------------------------

function packageManagers
{
  echo "Installing homebrew ..."
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

  echo "Installing cask ..."
  brew tap "homebrew/cask"

  echo "Installing homebrew bundle"
  brew tap "homebrew/bundle"
}

# -----------------------------------------------------------------------------
# Install software
# -----------------------------------------------------------------------------

function software
{
  echo "Installing software ..."
  brew bundle install --file="${DOTFILES_ROOT}/install/Brewfile"
}

# -----------------------------------------------------------------------------
# Install gems
# -----------------------------------------------------------------------------

function gems
{
  echo "Installing gems ..."
  gem install bundler && bundle install --gemfile="${DOTFILES_ROOT}/install/Gemfile"
}

# -----------------------------------------------------------------------------
# Install Code extensions
# -----------------------------------------------------------------------------

function codeExtensions
{
  echo "Installing Code extensions ..."
  while read -r extension
  do
    if [[ "$extension" =~ \#.+ ]]
    then
      echo "Skipping ${extension}"
    else
      code --install-extension "$extension"
    fi
  done < "$DOTFILES_ROOT/install/Codefile"
}

# -----------------------------------------------------------------------------
# Install global npm packages
# -----------------------------------------------------------------------------

function npmPackages
{
  npm i -g '@vue/cli'
}

# -----------------------------------------------------------------------------
# Run
# -----------------------------------------------------------------------------

# Add specified tasks to list or default to all
if [[ "$#" == 0 ]]
then
  tasks=( "xcodeCli" "packageManagers" "software" "gems" "codeExtensions" "npmPackages" )
else
  tasks=$@
fi

echo "Running tasks: ${tasks[@]}"

# Run the specified tasks
for task in ${tasks[@]}
do
  case "$task" in
    "xcodeCli") xcodeCli;;
    "packageManagers") packageManagers;;
    "software") software;;
    "gems") gems;;
    "codeExtensions") codeExtensions;;
    "npmPackages") npmPackages;;
    *) echo "Unknown task '${task}'!";;
  esac
done
