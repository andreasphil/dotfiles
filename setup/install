#!/bin/bash

# -----------------------------------------------------------------------------
# INSTALL
#
# Functions for setting up command line tools, package managers and other
# software.
#
# Usage: Run `. install` to get access to the functions below. 
# -----------------------------------------------------------------------------

function df_installXcodeCli {
  xcode-select --install
}

function df_uninstallXcodeCli {
  # https://developer.apple.com/library/archive/technotes/tn2339/_index.html
  rm -rf /Library/Developer/CommandLineTools
}

function df_installZsh {
  echo "Installing ZSH ..."
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
  
  # Plugins
  git clone https://github.com/zsh-users/zsh-completions ${ZSH_CUSTOM:=~/.oh-my-zsh/custom}/plugins/zsh-completions
  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
}

function df_installHomebrew {
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
  brew tap "homebrew/bundle"
}

function df_installBrewfile {
  brew bundle install --file="${DOTFILES_ROOT}/setup/Brewfile"
}

function df_installNvm {
  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.0/install.sh | bash
  echo "Please restart the shell for nvm to take effect."
}

function df_installCodeExtensions {
  set +e

  while read -r extension
  do
    if [[ "$extension" =~ \#.+ ]]
    then
      echo "Skipping ${extension}"
    else
      code --install-extension "$extension"
    fi
  done < "$DOTFILES_ROOT/setup/Codefile"

  set -e
}
